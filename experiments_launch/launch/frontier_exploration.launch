<launch>

    <!-- Set to your sensor's range -->
    <arg name="sensor_range" default="4.0"/>

    <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>

    <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen" >

        <param name="frequency" type="double" value="5.0"/>
        <param name="goal_aliasing" type="double" value="$(arg sensor_range)"/>

  #All standard costmap_2d parameters as in move_base, other than BoundedExploreLayer

        <rosparam ns="explore_costmap" subst_value="true">
            footprint: [ [-0.05, 0.20], [0.22, 0.20], [0.22, -0.20], [-0.05, -0.20], [-0.05, -0.17], [-0.22, -0.17], [-0.22, -0.17], [-0.22, 0.17], [-0.05, 0.17] ]
            
            transform_tolerance: 0.3
            update_frequency: 4.0
            publish_frequency: 2.0

            #must match incoming static map
            global_frame: map
            robot_base_frame: base_link
            resolution: 0.025

            rolling_window: false
            track_unknown_space: true

            plugins: 

                - {name: static,           type: "costmap_2d::StaticLayer"}            
                - {name: explore_boundary, type: "frontier_exploration::BoundedExploreLayer"}
                #Can disable sensor layer if gmapping is fast enough to update scans
                - {name: sensor,           type: "costmap_2d::ObstacleLayer"}
                - {name: inflation,        type: "costmap_2d::InflationLayer"}

            static:         
                map_topic: /map
                subscribe_to_updates: true

            explore_boundary:
                resize_to_boundary: false
                frontier_travel_point: closest
                #set to false for gmapping, true if re-exploring a known area
                explore_clear_space: false

            sensor:
                observation_sources: laser
                laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}

            inflation:
                inflation_radius: 0.2
      </rosparam>
    </node>

</launch>

